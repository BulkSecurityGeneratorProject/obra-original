application {
  config {
    baseName obras
    applicationType monolith
    databaseType sql
    prodDatabaseType postgresql
    buildTool maven
    packageName br.slobra.aplicacao
    authenticationType jwt
    clientFramework angular
    clientPackageManager npm
    serverPort 8080
    nativeLanguage pt-br 
    enableTranslation true
    languages 	[pt-br,en,es]
    testFrameworks [cucumber]
    enableHibernateCache false
    serviceDiscoveryType false
    websocket false
    useSass false
    clientPackageManager npm

  }
  entities * 
}

entity Obras {
    id Integer,
    nome String required,
    local String required,
    metragem Long,
    status String,
    dataInicio LocalDate required,
    dataFim LocalDate required,
}
                    


entity LancamentoGastos {
	nomeObra String,
    valorDeposito Long,
    valorDespesa Long,
    valorSaldo Long
}

relationship OneToOne {
    Periodo{periodo} to Conta
}

relationship OneToMany {
    Obras{obra} to Periodo
    LancamentoGastos{lancamento} to Obras
}

entity Periodo {   
    idConta String,
    data LocalDate
}

entity Conta {
    id Integer,
    nome String required,
    valor Long,
    dataVencimento LocalDate required,
    pagamento Pago,
    nota NotaFiscal,
    tipo TipoConta,
    parcelado Integer
}

enum NotaFiscal {
    SIM, NAO
}

enum TipoConta {
    MAO_DE_OBRA, MATERIAIS, DECORACAO, DOCUMENTACAO
}

enum Pago {
    SIM, NAO
}


// Set pagination options

paginate Obras with pagination
paginate LancamentoGastos with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
